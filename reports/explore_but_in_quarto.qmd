---
title: "Explore but in quarto"
author: "AP"
format: html
format:
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
editor: visual
---

## Preliminary preprocessing

```{r}
library(tidyverse)
library(gtsummary)
library(targets)
library(yardstick)
# install.packages("familiar", dependencies = TRUE)
library(familiar)

test_ids <- tar_read(test_ids)

baseline <- tar_read(pt_names) |>
  mutate( test_set = id_univoco %in% test_ids)
daily <- tar_read(pt_registry) |>
  mutate( test_set = id_univoco %in% test_ids) |>
  filter(sbt != -1)
trd <- tar_read(weaningsTRD) |>
  mutate( test_set = id_univoco %in% test_ids)
```

## Test set

Baseline differences

```{r}
table_baseline <- baseline |>
  select(-id_univoco, 
         -starts_with("vm"),
         -starts_with("icu"),
         -starts_with("osp")) |>
  mutate(reason = reason |>
           fct_recode(
             "Sepsis" = "Sepsi",
             "Pneumonia" = "Polmonite",
             "Post-surgical complications" = "Complicanze Postoperatorie",
             "Heart Failure" = "Scompenso Cardiaco",
             "COPD exacerbation" = "BPCO Riacutizzata",
             "Other" = "Altro (specificare)",
             "Trauma - Polytrauma" = "Trauma - Politrauma"
             # ARDS doesn't need recoding
           )) |>
  tbl_summary(
    by = test_set,
    label = list( type ~ "Ventilation mode",
                  sesso ~ "Gender",
                  anni_eta ~ "Age (years)",
                  reason ~ "Reason for MV")
  ) |>
  add_p() |>
  add_q()
```

Daily differences (all but study days)

```{r}
table_daily <- daily |>
  select(-id_registry,
         -filter_deleted,
         -id_univoco,
         -id_medico,
         -starts_with("susp_"),
         -starts_with("stop_"),
         -starts_with("fail_"),
         -cpis,
         -data_lettura,
         -giorno_studio,
         susp_tot) |>
  mutate(sbt = sbt |>
           as.character() |>
           fct_recode(
             # "Already extubated" = "-1",
             "Readiness Testing failure" = "0",
             "SBT success" = "1",
             "SBT failure" = "2"
           )
  ) |>
  tbl_summary(
    by= test_set
  ) |>
  add_p() |>
  add_q()
  
```

Daily differences ( study days)

```{r}
table_days <- daily |>
  group_by(id_univoco) |>
  summarise(giorno_finale = max(giorno_studio),
            test_set = unique(test_set)) |>
  select(giorno_finale,
         test_set) |>
  tbl_summary(
    by = test_set,
    label = giorno_finale ~ "Day of study",
    statistic = all_continuous() ~ "{median}  (range: {min}, {max})"
    # digits = ~ 2
  ) |>
  add_p() |>
  add_q()
```

TRD differences

```{r, eval = FALSE}
table_trd <- trd |>
  select(-file,
         -id_univoco,
         -date,
         -ora) |>
  tbl_summary(
    by = test_set
  ) |>
  add_p() |>
  add_q()
```

```{r}
complete_table <- tbl_stack(
  list(
    table_baseline,
    table_daily,
    table_days
    ),
  group_header = c(
    "Baseline data",
    "Daily registry",
    "Days of MV"
  )
)
```

## Dummy models

-   Model 0 always predict Class 0
-   Model 1 always predict Class 1
-   Model 2 always predict Class 2

```{r}
observed <- daily |>
  select(sbt) |>
  unlist()

pred_obs <- tibble(
  observed,
  pred0 = rep_len(0, length.out = length(observed)),
  pred1 = rep_len(1, length.out = length(observed)),
  pred2 = rep_len(2, length.out = length(observed))
  
)

#example
table(pred_obs$pred0, pred_obs$observed)
```

-   Model 3 predicts with random classes
-   Model 4 predicts random with observed class frequencies

```{r}
daily |>
  select(sbt, test_set) |>
  tbl_summary(
    by = test_set,
    label = sbt ~ "Daily attempt"
  ) |>
  add_p() |>
  add_q()

set.seed(4242)
pred_obs <- pred_obs |>
  mutate(
    pred3 = sample(0:2, size = length(observed), replace = TRUE),
    pred4 = sample(
      0:2,
      size = length(observed),
      replace = TRUE,
      prob = c(78,12,10)
    )
  )
  
table(pred_obs$pred3, pred_obs$observed)
```

Model 5 predicts with baseline and daily input

```{r}
dailydata <- daily |>
  select(id_univoco,
         starts_with("ega"),
         sofa,
         susp_tot,
         giorno_studio,
         sbt,
         test_set) |>
  left_join(
    y = baseline |>
      select(
        id_univoco,
        type,
        sesso,
        anni_eta,
        bmi,
        ibw,
        saps,
        reason
      ),
    by = "id_univoco"
  )

model5 <- summon_familiar(
  data = filter(dailydata, test_set == FALSE),
  experiment_dir = file.path(here::here(), "familiar_1"),
  validation_batch_id = "test_set",
  experimental_design = "cv(fs+mb,10,1)",
  sample_id_column = "id_univoco",
  outcome_type = "multinomial",
  outcome_column = "sbt",
  fs_method = "mrmr",
  learner = c("glm", "xgboost_tree"),
  evaluation_metric = c("accuracy", "balanced_accuracy", "precision"),
  imputation_method = "simple"
  )

# plots <- familiar::plot_model_performance(
#   object = familiar_1,
#   data = filter(dailydata, test_set == TRUE),
#   metric = c("accuracy", "balanced_accuracy", "precision")
#   )
# 
# plots[[1]]
```

Metric evaluation

```{r}
pred_obs <- pred_obs |>
  mutate(
    across(
      everything(),
      ~ factor(
        .x,
        levels = c(0,1,2)
      )
    )
  )

multi_metric <- metric_set(
  accuracy,
  bal_accuracy,
  precision,
  mcc,
  ppv,
  npv)
  
pred_obs |>
  multi_metric(
    truth = observed, 
    estimate = pred4,
    estimator = "macro_weighted")
```
