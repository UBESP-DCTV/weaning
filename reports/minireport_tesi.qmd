---
title: "Minireport tesi"
author: "AP"
format:
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
editor: visual
---

## Obiettivo

Questo report contiene alcune analisi e tabelle utili alla tesi, in particolare:

1.  n pat (cohort size) and time span

2.  tot days, min/max I/II/II quartile days/pat

3.  tot SBT, min/max/ I/II/III quartile SBT/paz

4.  min/max I/II/III quartile SBT riusciti / SBT provati per paziente (e overall)

## Caricamento pacchetti

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
if (!interactive()) {
  options(tidyverse.quiet = TRUE)
}
library(tidyverse)
library(targets)
library(gtsummary)
```

e i targets

```{r, eval = FALSE}
tar_visnetwork(TRUE, exclude = starts_with("gg") | contains("Plot"))
```

```{r}
baseline <- tar_read(pt_names) |>
  select("id_univoco", "type", "sesso", "anni_eta", "reason",
         "vm_inizio", "vm_fine") |>
  mutate(reason = reason |>
           fct_recode(
             "Sepsis" = "Sepsi",
             "Pneumonia" = "Polmonite",
             "Post-surgical complications" = "Complicanze Postoperatorie",
             "Heart Failure" = "Scompenso Cardiaco",
             "COPD exacerbation" = "BPCO Riacutizzata",
             "Other" = "Altro (specificare)",
             "Trauma - Polytrauma" = "Trauma - Politrauma"
             # ARDS doesn't need recoding
           ))
daily <- tar_read(pt_registry) |>
  select("id_univoco", "type", "data_lettura", "giorno_studio", "sbt") |>
    # sbt :=
    #   - se stubato = `-1`,
    #   - se sbt non provato =  `0`,
    #   - se sbt riuscito =  `1`,
    #   - se sbt fallito =  `2`
  mutate(sbt = sbt |>
           as.character() |>
           fct_recode(
             "Already extubated" = "-1",
             "Weaning not attempted" = "0",
             "SBT success" = "1",
             "SBT failure" = "2"
           )
  )
```

## Pazienti totali nello studio

```{r}
baseline |>
  select(-id_univoco, -starts_with("vm")) |>
  tbl_summary(
    label = list( type ~ "Ventilation mode",
                  sesso ~ "Gender",
                  anni_eta ~ "Age (years)",
                  reason ~ "Reason for MV")
  )
```

```{r}
baseline |>
  select(starts_with("vm")) |>
  tbl_summary(
    label = list(
      vm_inizio ~ "MV start",
      vm_fine ~ "MV end"
    ),
    statistic = ~ "{min}, {max}"
  )
```

## Giorni nello studio

```{r}
daily |>
  group_by(id_univoco) |>
  summarise(giorno_finale = max(giorno_studio)) |>
  select(giorno_finale) |>
  tbl_summary(
    label = giorno_finale ~ "Day of study",
    statistic = ~ "{median}  (range: {min}, {max})  (IQR: {p25}, {p75})",
    # digits = ~ 2
  )
```

## SBT nello studio

```{r}
daily |>
  filter( sbt %in% c("SBT success", "SBT failure")) |>
  mutate( sbt = fct_drop(sbt)) |>
  group_by(id_univoco) |>
  count(sbt) |>
  # pivot_wider(names_from = sbt,
  #             values_from = n,
  #             values_fill = 0) |>
  ungroup() |>
  select(-id_univoco) |>
  tbl_summary( 
    by = sbt,
    statistic =  ~ "{median}  (range: {min}, {max})  (IQR: {p25}, {p75})",
    # digits =  ~ 2
  ) |>
  add_overall( col_label = "Totale")
```
